#!/usr/bin/env groovy
def image

podTemplate(
//     containers:[containerTemplate(name: 'dind', image: 'docker:dind', privileged: true)],
//     volumes: [persistentVolumeClaim(claimName: 'docker-home-managed-disk', mountPath: '/var/lib/docker')]
     yaml: '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: dind
    image: docker:dind
    securityContext:
      runAsUser: 0
      fsGroup: 0
      privileged: true
    volumeMounts:
      - name: docker-home
        mountPath: /var/lib/docker
  volumes:
    - name: docker-home
      emptyDir: {}
'''
) {
	node(POD_LABEL) {
		container('dind') {
			stage('Build') {
				checkout scm
				image = docker.build("link2coryACR.azurecr.io/fastapi_hello_world:${env.BUILD_ID}")
			}
		}
	}

}

podTemplate(
//     containers:[containerTemplate(name: 'dind', image: 'docker:dind', privileged: true)],
//    volumes: [persistentVolumeClaim(claimName: 'docker-home-managed-disk', mountPath: '/var/lib/docker')]
      //persistentVolumeClaim:
       // claimName: docker-home-managed-disk 
     yaml: '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: dind
    image: docker:dind
    securityContext:
      runAsUser: 0
      fsGroup: 0
      privileged: true
    volumeMounts:
      - name: docker-home
        mountPath: /var/lib/docker
  volumes:
    - name: docker-home
      emptyDir: {}
'''
) {
	node(POD_LABEL) {
		container('dind') {
			stage('Publish') {
				// only deploy successful builds
				if (currentBuild.result == null || currentBuild.result == 'SUCCESS') {
					docker.withRegistry('https://link2coryACR.azurecr.io', 'acr-credentials') {
						image.push("${env.BUILD_ID}")
						image.push("latest")
					}
				}
			}
		}
	}

}
